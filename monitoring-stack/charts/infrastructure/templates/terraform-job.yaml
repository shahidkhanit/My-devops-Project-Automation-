{{- if .Values.terraform }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "infrastructure.fullname" . }}-terraform-{{ .Values.global.cloudProvider }}
  labels:
    {{- include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: terraform
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        {{- include "infrastructure.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: terraform
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "infrastructure.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: terraform
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.terraform.image.repository }}:{{ .Values.terraform.image.tag }}"
        imagePullPolicy: {{ .Values.terraform.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - |
          set -e
          cd /terraform/{{ .Values.global.cloudProvider }}
          
          # Initialize Terraform
          terraform init
          
          # Plan infrastructure
          terraform plan -out=tfplan
          
          # Apply infrastructure
          terraform apply tfplan
          
          echo "Infrastructure deployment completed for {{ .Values.global.cloudProvider }}"
        
        env:
        - name: TF_VAR_environment
          value: {{ .Values.global.environment }}
        - name: TF_VAR_region
          value: {{ .Values.global.region }}
        {{- if eq .Values.global.cloudProvider "aws" }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-aws-credentials
              key: secret-access-key
        {{- else if eq .Values.global.cloudProvider "azure" }}
        - name: ARM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-azure-credentials
              key: client-id
        - name: ARM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-azure-credentials
              key: client-secret
        - name: ARM_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-azure-credentials
              key: subscription-id
        - name: ARM_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-azure-credentials
              key: tenant-id
        {{- else if eq .Values.global.cloudProvider "gcp" }}
        - name: GOOGLE_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: {{ include "infrastructure.fullname" . }}-gcp-credentials
              key: service-account-key
        - name: TF_VAR_project_id
          value: {{ .Values.gcp.projectId }}
        {{- end }}
        
        volumeMounts:
        - name: terraform-code
          mountPath: /terraform
          readOnly: true
        - name: terraform-state
          mountPath: /terraform-state
        
        resources:
          {{- toYaml .Values.terraform.resources | nindent 10 }}
      
      volumes:
      - name: terraform-code
        configMap:
          name: {{ include "infrastructure.fullname" . }}-terraform-code
      - name: terraform-state
        {{- if eq .Values.terraform.backend.type "local" }}
        emptyDir: {}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ include "infrastructure.fullname" . }}-terraform-state
        {{- end }}
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}